<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>关于428开盛集团旗下华晟光伏的参观与思考</title>
      <link href="2021/05/14/%E5%85%B3%E4%BA%8E428%E5%BC%80%E7%9B%9B%E9%9B%86%E5%9B%A2%E6%97%97%E4%B8%8B%E5%8D%8E%E6%99%9F%E5%85%89%E4%BC%8F%E7%9A%84%E5%8F%82%E8%A7%82%E4%B8%8E%E6%80%9D%E8%80%83/"/>
      <url>2021/05/14/%E5%85%B3%E4%BA%8E428%E5%BC%80%E7%9B%9B%E9%9B%86%E5%9B%A2%E6%97%97%E4%B8%8B%E5%8D%8E%E6%99%9F%E5%85%89%E4%BC%8F%E7%9A%84%E5%8F%82%E8%A7%82%E4%B8%8E%E6%80%9D%E8%80%83/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>信息安全领域中有个术语叫做逆向，百度解释如下：逆向工程是一种产品设计技术再现过程，即对一项目标产品进行<em>逆向</em>分析及研究，从而演绎并得出该产品的处理流程、组织结构、功能特性及技术规格等设计要素，以制作出功能相近，但又不完全一样的产品。</p><p>计算机视觉领域中有个术语叫做三维重建，其中的一种方法是通过同一物品的若干张二维图片复原出该物品所处的真实三维场景。</p><p>经过4月28日对华晟光伏的参观，我从技术路线，产品生产，人力资源，组织架构，政策，经济效益等多个角度，试图逆向并重建整个公司。根据现场所见所闻作出一定的演绎推理，考虑多因素影响，在已知最接近现实的理想假设条件下，在脑海中尝试用线性回归，神经网络的思路，对公司的过去进行拟合，对未来进行预测，并得出个人在发挥不同主观能动性的情况下得到的不同人生结果的预测结果。也许结论尚早，需要更多的数据，但大概率情况下：在这座城市生活，不是我喜欢的生活，在这个行业的工作，不是我向往的工作。</p><p>对于实习，以前我一直以为可有可无，那是因为我处于应用物理专业，似乎不存在实习的概念。但自从改行之后，我切身体会到了第一份工作与实习的重要意义。毫不夸张地说，一个“好”的实习，对一个大学生各方面的提升速度甚至超过大学四年的总和。至于如何定义这个“好”，那就千人前面了。</p><p>下面浅谈我这次参观学习的所见所闻，所思所想。</p><hr><h3 id="关于细节"><a href="#关于细节" class="headerlink" title="关于细节"></a>关于细节</h3><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/IMG_20210428_172622.jpg" alt="IMG_20210428_172622"></p><p>也许，从这外表“最气派”的建筑看来，贵集团底蕴深厚，确实，作为一家国企，按理说以稳为主，方正形状，稳重但缺少活力，扎实但少了创新。关于设计，我更欣赏OMA，NBBJ。</p><p>接待会议开始，介绍企业的PPT做的都不符合基本规范，读ppt的小姐姐让我想起了一句词“大弦嘈嘈如急雨，小弦切切如私语。嘈嘈切切错杂弹，大珠小珠落玉盘。”也让我想起了曾经某人的比喻“像机关枪一样哒哒哒的，听着很累”。总而言之，诸多瑕疵体现了两个字——匆忙。显然，不会为了我们这些渺小的存在而准备完备，同时，也验证了华晟光伏刚成立不久，属于初创的事实。年轻的公司，喜忧参半。</p><p>关于公司选址，地处安徽宣城的偏远地区，当然，计划作为日后的光伏发电基地大概率是不可能放在靠近市中心位置的，这仿佛给了人一种与世隔绝的感觉。宣城不大，经济发展不能说是先进，机遇不多，也许不适合我这样喜欢挑战，喜欢机遇的年轻人吧，没错，我就是喜欢卷，喜欢安逸但不习惯安逸。</p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/IMG_20210428_112137.jpg" alt="IMG_20210428_112137"></p><p>午餐时与一个资深工艺工程师聊了些许，这位老师傅看起来有四五十岁了，当年毕业于南通大学物理专业，这位师傅是跳槽来的（看来跳槽加薪在这个行业里面也挺香）。资深工程师的上级就到专家CTO级别了。公司内部划分1~27级别，1级最低是保安保洁这种职业，最高级别27是CTO这种级别，像一个普通大学生进去也就7级这样，每年有机会上升1-2级，默认的话似乎最快需要10年才能到达最高级别，这还没考虑学历的情况下。。。所以这发展前途，别的行业干了10年都能赚足一辈子的钱了，实现了财富自由，而这。。。刚进去才0.5w左右一个月，税后到手也就三四千，这叫好？我不认为这是好。</p><h3 id="关于技术"><a href="#关于技术" class="headerlink" title="关于技术"></a>关于技术</h3><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/image-20210514234502879.png" alt="image-20210514234502879"></p><p>经过介绍得知，华晟光伏最核心的技术方向优势在于日本20年专利保护期终止所解封的部分，最核心的人员在于一位CTO是中科院电工所研究员及其学生，以及未来招收的研究人员。</p><p>科学是技术之母，所以大方向上，学术和工业结合是很好的方式，这也是很多大学老师都有自己公司的原因，如果换成是我，我也会这样选择。当然，当老板也不仅仅要考虑技术这一个方面，更要考虑市场需求，风险预估，政策态度等诸多方面。</p><h3 id="关于研发"><a href="#关于研发" class="headerlink" title="关于研发"></a>关于研发</h3><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/IMG_20210428_131700.jpg" alt="IMG_20210428_131700"></p><p>公司走的两条路线，一个是钙钛矿，一个是异质结。异质结成本高，但是效率比钙钛矿好，钙钛矿相对廉价点。</p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/IMG_20210428_134828.jpg" alt="IMG_20210428_134828"></p><p>技术的跃迁总是以阶段性的突破，每一代技术之间带来效率的差异能达到10%甚至以上。而如果技术上没有大的突破，将很难产生肉眼可见的实际提升，而且在工艺上也只是百分之零点几的优化。所以说，研发就是科技公司的命脉，新一代技术的产生对以旧技术为主的公司来说，简直就是降维打击的存在。</p><h3 id="关于人才"><a href="#关于人才" class="headerlink" title="关于人才"></a>关于人才</h3><p>学术界的研究成果，该公司按理说有能力掌握第一手信息，而CTO便是中科院的研究员，中国大部分的科研产出，基本来源于中科院。高校方面在这个方向的领头羊带的学生，也在贵公司的招募计划中。可以说，贵司在人力资源方面很有优势。企业的研发人员需要做的，就是从实验室到生产的部分的研发。</p><hr><h3 id="关于政策"><a href="#关于政策" class="headerlink" title="关于政策"></a>关于政策</h3><p>由于光伏产业属于清洁能源一块，为了实现2030碳顶峰，2060碳中和，用光电风电等清洁能源来代替传统的火电将会是必然趋势。政策上必然会受到政府的大力支持。要钱，会有一定的补贴，要地，给地。政策上帮助提供初期成长条件，至于结果，主要就交给市场筛选。</p><h3 id="关于生产"><a href="#关于生产" class="headerlink" title="关于生产"></a>关于生产</h3><p><video style="width:500px" src="https://www.enf.com.cn/z/v/63960223da872175.mp4"></video></p><p>此处给个官网的生产车间视频的链接<a href="https://www.enf.com.cn/z/v/63960223da872175.mp4">https://www.enf.com.cn/z/v/63960223da872175.mp4</a></p><p>看到的和这个基本是一样的，工业4.0的风格，自动化程度挺高的，由于生产的是光伏芯片，镀膜的精准度在埃单位级别，纳米尺度的产品不自动化估计也造不出来。</p><p>生产线的组装很多已经实现国产化的了，从论文到生产线，就是企业研发的事情了，从实验室转移到生产线，各种仪器设备的参数就随之设计出来了，接着交给特定的厂商定制，或者用已有的设备进行改造组装即可。</p><p>但有一个问题，在这样的企业，话语权最高的应该是高层的研发人员，比如CTO可以直接决定企业的技术路线，而这似乎是不利于新想法的产生与实践，研发是投入很多，收获不多的一种工作，所以这对公司的组织架构，企业文化，资源管理来说，如何激发创新思想，最大化将思路转化为实际就是一个巨大的考验了。作为一个科技公司，我认为最重要的是可持续的不断更新迭代的技术，这个要求是非常高的，对此，我仍然抱有怀疑态度。</p><hr><p>参观他们的生产线时，由于对生产环境有较高要求，所以需要全副武装的以减少空气尘埃。厂房新建时，油漆工不慎滴了油漆进到车间，导致车间空气中有机分子成分上升，导致产品良率下降很多。</p><p>我们一共去了2个车间，一个主要是镀膜，一个主要是用于封装，内部不让拍照，具体的就像前面视频中的那样。首先是第一个车间，整个公司的最值钱的就在这条线上了，从原料到异质结芯片。有的镀膜步骤需要特定气体环境，因此就与高压气体等有关系，所以这对安全管理也有一定的要求。车间中用的AGV智能小车，真的是再熟悉不过了，18年我们第一次参加数学建模选的题目就是它，队友用C++编程实现其自动巡航路线，解决了相关路线效率问题。接着，我们去了第二车间，这个车间主要是封装工作，将生产好的小块电池封装成一大块太阳能电池板，里面也基本都是自动化，是普通操作工人工作的地方，没有学历限制，据说年龄最小的才16岁。关于车间的流水线，不断地让我联想到数学建模的东西，全是物理数学模型烧录的代码，精准控制。所以，有学数学的机会，还是要好好学深的，用时方恨少。我看到了胶带机，自动对产品进行封装的机器，大约有大学的一个讲台大的占地面积，有2米高这样。我看到了机器臂，这让我想到了参照系，不禁开始思索如何在程序中教会这只手臂精准地把握分寸，想起特斯拉工厂的机械臂，空间站上的机械臂。特斯拉工厂的机械臂是通过学习熟练焊工的手法，记录参数进行学习，模仿而成的。似乎每种设备都有做的很好的厂家，比如深圳就有专门制作AGV小车的厂商，</p><h3 id="关于产品"><a href="#关于产品" class="headerlink" title="关于产品"></a>关于产品</h3><p>参观了他们展厅的一些产品，随便说几句。主要是光伏建材，移动能源，靶材，装备这几个方面的产品。</p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/IMG_20210428_132642.jpg" alt="IMG_20210428_132642"></p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/IMG_20210428_132125.jpg" alt="IMG_20210428_132125"></p><ul><li>垃圾分类，如果可以智能分类是挺好的，想要垃圾筐有智能就要有电。拖着电线不现实，所以用太阳能电池板倒是挺好。</li></ul><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/IMG_20210428_132813.jpg" alt="IMG_20210428_132813"></p><ul><li>关于效率感觉还是很低，目前对太阳能的利用效率才达到五分之一的地步。虽然慢慢开始实用了，但还是希望效率越高越好。</li></ul><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/IMG_20210428_132841.jpg" alt="IMG_20210428_132841"></p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/IMG_20210428_132916.jpg" alt="IMG_20210428_132916"></p><ul><li>当井盖有了电。。。emmm，电池的防水防潮是个挑战。用处？在发电效率上来之前没想到有啥用。</li></ul><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/IMG_20210428_132921.jpg" alt="IMG_20210428_132921"></p><ul><li>柔性光伏板，他们的柔性是把光伏电池芯片做成微米尺度的大小，从而实现可卷曲的效果，如果用这个材料做成雨伞，设计成服装，倒是挺好的，关键是人们对这种需求是否能克服其成本。</li></ul><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/IMG_20210428_132947.jpg" alt="IMG_20210428_132947"></p><ul><li>这个产品体现了idea的价值。如果每棵树都有自主供电设备，那么至少可以实现森林健康监控，防火，保护野生动物，森林防护，都有用武之地。</li></ul><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/IMG_20210428_132957.jpg" alt="IMG_20210428_132957"></p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/IMG_20210428_133012.jpg" alt="IMG_20210428_133012"></p><ul><li>我个人感觉，还是信息化带动了这项需求，如果不需要万物互联，所谓的万物也就未必需要用到电，而分布式太阳能电池板结合蓄电池将会极大方便分布式智能设备的运作。</li></ul><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/IMG_20210428_133025.jpg" alt="IMG_20210428_133025"></p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/IMG_20210428_133031.jpg" alt="IMG_20210428_133031"></p><ul><li>旅行套装，带着去旅行在野外充电？挺好的，就怕遇到天气不好的情况。</li></ul><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/IMG_20210428_133141.jpg" alt="IMG_20210428_133141"></p><ul><li>电池板近照，里面是用电路串联而成，每一小块大约有一个小鼠标垫大小，若干个串接起来。每一小块都有特定的ID，便于追溯生产线上产生的问题。</li></ul><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/IMG_20210428_133146.jpg" alt="IMG_20210428_133146"></p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/IMG_20210428_133153.jpg" alt="IMG_20210428_133153"></p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/IMG_20210428_131213.jpg" alt="IMG_20210428_131213"></p><ul><li>用作屋顶的发电砖瓦，主打轻薄，但是城市中的实用性优先，城市住宅区光照面积有限。</li></ul><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/IMG_20210428_131220.jpg" alt="IMG_20210428_131220"></p><ul><li>用于充电的座椅，适用于公园，智能公交站等场景，手机可以放旁边充电，似乎是通过NFC等无线充电技术，但这似乎也有安全隐患？</li></ul><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/IMG_20210428_131235.jpg" alt="IMG_20210428_131235"></p><ul><li>用于车顶的太阳能发电板</li></ul><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/IMG_20210428_131353.jpg" alt="IMG_20210428_131353"></p><ul><li>用于车棚的光照收集，但是太阳能电池板的一个重要指标是热系数，定义的是当温度每升高1摄氏度对发电的效果影响，温蒂越高，材料就越受到影响，从而降低发电效果。这就有意思了，像中国江苏一带，夏天室外温度动辄四五十度，柏油路面的温度更高，作为深色材料的光伏电池板，是否经得起高温的如此考验呢？发电效率具体又能有多少？在成本廉价的情况下能达到一般情况下实用程度吗？经得起实践考验的才是好产品，我在此仍然抱有怀疑态度。</li></ul><h3 id="关于客户"><a href="#关于客户" class="headerlink" title="关于客户"></a>关于客户</h3><p>买方与卖方永远是相对的两个概念。</p><p>在流水线上的每种设备，基本都有做的很好的厂家，对于这些厂家来说，华晟光伏就是他们的客户，比如AGV智能小车，胶带机自动封装，流水线，机械臂，当然，像荷兰光刻机这种设备肯定是属于全球限量版设备了。</p><p>对于华晟公司生产的产品，根据产品的不同可以卖给不同客户，包括C端和B端，淘宝工厂直销，代理销售，作为发电站为供电局提供输电支持，直接对别的B端供电，招标与中标等等都可以。比如某所学校要做能源改造，要用清洁能源建立自己的储电机制，这就用到了这家公司的产品。</p>]]></content>
      
      
      <categories>
          
          <category> 行与思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 光伏产业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/05/14/hello-world%E6%A8%A1%E6%9D%BF/"/>
      <url>2021/05/14/hello-world%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<p>标记一下分割线以上标签的链接：<a href="https://butterfly.js.org/posts/dc584b87/#Post-Front-matter">https://butterfly.js.org/posts/dc584b87/#Post-Front-matter</a></p><p>post front-matter链接：<a href="https://butterfly.js.org/posts/dc584b87/#Post-Front-matter">https://butterfly.js.org/posts/dc584b87/#Post-Front-matter</a></p><p>page</p><p>title    【必需】頁面標題<br>date    【必需】頁面創建日期<br>type    【必需】標籤、分類和友情鏈接三個頁面需要配置<br>updated    【可選】頁面更新日期<br>description    【可選】頁面描述<br>keywords    【可選】頁面關鍵字<br>comments    【可選】顯示頁面評論模塊(默認 true)<br>top_img    【可選】頁面頂部圖片<br>mathjax    【可選】顯示mathjax(當設置mathjax的per_page: false時，才需要配置，默認 false)<br>katex    【可選】顯示katex(當設置katex的per_page: false時，才需要配置，默認 false)<br>aside    【可選】顯示側邊欄 (默認 true)<br>aplayer    【可選】在需要的頁面加載aplayer的js和css,請參考文章下面的音樂 配置<br>highlight_shrink    【可選】配置代碼框是否展開(true/false)(默認為設置中highlight_shrink的配置)</p><hr><p>post</p><p>title    【必需】文章標題<br>date    【必需】文章創建日期<br>updated    【可選】文章更新日期<br>tags    【可選】文章標籤<br>categories    【可選】文章分類<br>keywords    【可選】文章關鍵字<br>description    【可選】文章描述<br>top_img    【可選】文章頂部圖片<br>cover    【可選】文章縮略圖(如果沒有設置top_img,文章頁頂部將顯示縮略圖，可設為false/圖片地址/留空)<br>comments    【可選】顯示文章評論模塊(默認 true)<br>toc    【可選】顯示文章TOC(默認為設置中toc的enable配置)<br>toc_number    【可選】顯示toc_number(默認為設置中toc的number配置)<br>copyright    【可選】顯示文章版權模塊(默認為設置中post_copyright的enable配置)<br>copyright_author    【可選】文章版權模塊的文章作者<br>copyright_author_href    【可選】文章版權模塊的文章作者鏈接<br>copyright_url    【可選】文章版權模塊的文章連結鏈接<br>copyright_info    【可選】文章版權模塊的版權聲明文字<br>mathjax    【可選】顯示mathjax(當設置mathjax的per_page: false時，才需要配置，默認 false)<br>katex    【可選】顯示katex(當設置katex的per_page: false時，才需要配置，默認 false)<br>aplayer    【可選】在需要的頁面加載aplayer的js和css,請參考文章下面的音樂 配置<br>highlight_shrink    【可選】配置代碼框是否展開(true/false)(默認為設置中highlight_shrink的配置)<br>aside    【可選】顯示側邊欄 (默認 true)</p><hr><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基于github仓库搭建具有版本控制功能的多终端Typora云笔记</title>
      <link href="2021/05/14/%E5%9F%BA%E4%BA%8Egithub%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E7%9A%84typora%E4%BA%91%E7%AC%94%E8%AE%B0/"/>
      <url>2021/05/14/%E5%9F%BA%E4%BA%8Egithub%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E7%9A%84typora%E4%BA%91%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>摘要：</p><p><a href="https://blog.csdn.net/weixin_44924882/article/details/108936635?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162096096216780274155245%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=162096096216780274155245&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-4-108936635.pc_search_result_hbase_insert&amp;utm_term=typora+github">https://blog.csdn.net/weixin_44924882/article/details/108936635?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162096096216780274155245%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=162096096216780274155245&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-4-108936635.pc_search_result_hbase_insert&amp;utm_term=typora+github</a></p><h2 id="Typora-OSS"><a href="#Typora-OSS" class="headerlink" title="Typora+OSS"></a>Typora+OSS</h2><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><h3 id="Experiment："><a href="#Experiment：" class="headerlink" title="Experiment："></a>Experiment：</h3><h3 id="Analysis："><a href="#Analysis：" class="headerlink" title="Analysis："></a>Analysis：</h3><h4 id="易用性："><a href="#易用性：" class="headerlink" title="易用性："></a>易用性：</h4><h4 id="迁移性："><a href="#迁移性：" class="headerlink" title="迁移性："></a>迁移性：</h4><p> 假如某一天，我用的ali云OSS突然不能用了咋办，当然这个概率很小，大概率是因为不想用了。</p><p>首先把OSS中图片批量下载，此时以前写的typora中的图片还是基于OSS的链接，通过分析链接结构发现本质上就是按照地址+目录的结构，所以现在的想法就是到时候typora使用代码模式，使用sublime text强大的替换功能把目录一键替换。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Js基本变量与输出</title>
      <link href="2021/05/10/Js%E5%9F%BA%E6%9C%AC%E5%8F%98%E9%87%8F%E4%B8%8E%E8%BE%93%E5%87%BA/"/>
      <url>2021/05/10/Js%E5%9F%BA%E6%9C%AC%E5%8F%98%E9%87%8F%E4%B8%8E%E8%BE%93%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="day1"><a href="#day1" class="headerlink" title="day1"></a>day1</h2><h3 id="路线"><a href="#路线" class="headerlink" title="路线"></a>路线</h3><p>基础</p><p>变量，数据类型，流程控制</p><p>DOM    Bom</p><p>js高级    面向对象    原型    闭包    私有    共有</p><p>DOM 文本对象模型：轮播图，淡入淡出，左右滑动，选项卡，下拉菜单，返回顶部，拖拽，表格增删改查，购物车添加功能</p><p>Bom 浏览器模型：打开窗口，关闭，cookie，定时器</p><p>原型图</p><p>ajax</p><p>h5新特性：拖拽，canvas画布，地理位置</p><p>es6</p><h3 id="js功能"><a href="#js功能" class="headerlink" title="js功能"></a>js功能</h3><p>特效，交互</p><h3 id="js起源"><a href="#js起源" class="headerlink" title="js起源"></a>js起源</h3><p>网景公司，为了丰富浏览器功能开发的语言</p><hr><h3 id="var-alert-prompt-4种命名规范-2种代码引入方式-注释"><a href="#var-alert-prompt-4种命名规范-2种代码引入方式-注释" class="headerlink" title="var\alert\prompt\4种命名规范\2种代码引入方式\注释"></a>var\alert\prompt\4种命名规范\2种代码引入方式\注释</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>测试js<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;link rel=&quot;stylesheet&quot; href=&quot;&quot;&gt; --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;script src=&quot;./js.js&quot;&gt;&lt;/script&gt;  --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;style&gt;类比style标签的写法，可以引入，也可以把标签写在html中&lt;/style&gt; --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;script&gt;也可以写在这前面，比如加载图片&lt;/script&gt; --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- js引用方式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;script&gt;通常来说写在body的最后&lt;/script&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// alert(&quot;在body代码最后的位置放一个弹窗&quot;)</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">/*多行注释*/</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//单行注释</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">//变量variable quantity</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//1、 var 变量=具体的值</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//2、 var 变量名;   变量名=变量值</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">// 弹窗alert(var)，字符串用“”</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">//名称，可包含字母数字_$，避免数字汉字标点开头，最好有具体含义</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//匈牙利命名法boxtxt</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//下划线命名法box_txt</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//小驼峰命名法boxTxt</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//大驼峰命名法BoxTxt</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        confirm(<span class="string">&quot;这是一个确认弹框&quot;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> index=confirm(<span class="string">&quot;点击确认就是true，取消就是false&quot;</span>);</span></span><br><span class="line">        alert(index);</span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">//prompt:提醒（某人说话）</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> txt=prompt(<span class="string">&quot;输入文本到variable&quot;</span>);</span></span><br><span class="line">        alert(txt);</span><br><span class="line"><span class="javascript">        <span class="comment">//点击确认就是输入文本，取消是null</span></span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="day2"><a href="#day2" class="headerlink" title="day2"></a>day2</h2><h3 id="输出-空格-基本数据类型"><a href="#输出-空格-基本数据类型" class="headerlink" title="输出\空格\基本数据类型"></a>输出\空格\基本数据类型</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>day2<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是即将被覆盖的p段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//输出,弹窗，alert，confirm，prompt</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//控制台的console系列</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log(&quot;控制台打印日志信息，常用来查错&quot;);</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.error(&quot;发生错误了&quot;);</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.warn(&quot;输出警告信息&quot;);</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// var index=(&quot;index大家都用来存数值，alert可以作为对象存给变量index&quot;);//这里加不加（）都可以</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// //实践证明，如果这里使用alert(&quot;汉字&quot;)赋值给index，后面再使用console.log(index)不作用,prompt与confirm可以用</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// var txt=123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log(index);</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log(txt);</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">//关于空格</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//document.write(&quot;1  2      3&quot;);</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//浏览器默认读取机制会把多个空格解析成一个</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//借鉴CSS中的&amp;nbsp，用&amp;nbsp代替空格</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//使用标签样式&quot;white-space：pre&quot;包裹</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        // document.write(&quot;<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&#x27;white-space:pre;&#x27;</span>&gt;</span>&quot;+&quot;1 2      3&quot;+&quot;<span class="tag">&lt;<span class="name">span</span>&gt;</span>&quot;)</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//document.write本质是在html中插入</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">//window.onload页面加载之后才会执行的代码,了解，不常用</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//window.onload=function()&#123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//     document.write(&quot;使用document.write来重写前面的html页面&quot;);</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// &#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">//数据类型</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//简单数据类型:数字，字符串，布尔，空，未定义；</span></span></span><br><span class="line">        </span><br><span class="line"><span class="javascript">        <span class="comment">//数值类型</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// var num=123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log(num);</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// var index=typeof num;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// var index=typeof(num);</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log(index);</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">//字符串string</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// var num1=123;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// var num2=2</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// var tex1=&quot;字符串可以是双引号&quot;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// var tex2=&#x27;也可以是单引号&#x27;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log(num1+num2);</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log(tex1+tex2);</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log(num1+tex1);</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// //这里的+是字符串拼接的效果，如果两个数据typeof都是number，就是算数相加，否则就是字符串拼接</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log(num1 + num2 + tex1 + tex2);</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log(tex1 + tex2 + num1 + num2+1 );</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//如果有多个数据+，从遇到的第一个不是数值类型的数据，+开始变为连接作用，不表示算数加法，即使后面还有多个num相加</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">//js中的浮点数，小数运算</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// var num1=0.1;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// var num2=0.2;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log(num1+num2);//结果会是0.30000000000000004</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// var index=Math.pow(10,1);</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log(parseInt((num1+num2)*index,10)/index);//需要经过此运算转换才可以得到0.3</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">//布尔</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//confirm弹窗</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// var x=true;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log(typeof x);//返回boolean</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//true：1：非0，false：0</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">//空 null，项目中释放内存时候会用到</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// var a=null;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log(typeof a);//返回的object。js的历史遗留问题</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log(Object.prototype.toString.call(null));//返回object null，原型的知识点</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">//未定义 undefined</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// var x=undefined;//声明一个变量但是没有赋值，DOM中常遇到</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log(typeof x);//返回undefined</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// var x</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// console.log(x);</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">//复杂数据类型</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//</span></span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>diary-210508</title>
      <link href="2021/05/08/diary-210508/"/>
      <url>2021/05/08/diary-210508/</url>
      
        <content type="html"><![CDATA[<h2 id="上午电脑清灰"><a href="#上午电脑清灰" class="headerlink" title="上午电脑清灰"></a>上午电脑清灰</h2><p>华硕主板清灰，自2014年买来至今将近7年，从没有清过灰。</p><p>取风扇时，风扇与主板相连的3根线，第一次拆，难搞哦，一根电源线，一根风扇控制线，还有一个最小的没注意是啥线，大力出不了奇迹，只会扯断线，后来发现这3个排线并无机关，直接两边翘着拔出即可。</p><p>清灰之后，效果很明显，其实灰好像看起来也不是非常严重的样子，不过我也不知道什么样叫非常严重。好吧，这个灵敏度应该挺高，影响还是有的，清理之后，CPU温度比原来降低了10度这样。天气和前一天一样热。</p><p>用的wise system monitor的桌面插件监控的温度</p><p>之前斟酌了下要不要换导热胶，后来看网上说，CPU的原装导热胶一般很耐用，结合自己使用情况，暂且不换，而且手工安装的松紧也会对导热性能造成影响，这种影响甚至能中和掉优质导热胶比普通导热胶所带来高出的效果</p><h2 id="下午修改404页面"><a href="#下午修改404页面" class="headerlink" title="下午修改404页面"></a>下午修改404页面</h2><p>下午把404页面html与main.css优化了一遍。</p><p>添加404模板，跳过渲染，教程来源<br><a href="https://www.cnblogs.com/MoYu-zc/p/14395965.html">https://www.cnblogs.com/MoYu-zc/p/14395965.html</a><br>hexo主目录中跳过渲染，butterfly主题目录中关闭默认404<br>404模板：<a href="https://404.life/">https://404.life/</a></p><h2 id="测试文章内照片墙"><a href="#测试文章内照片墙" class="headerlink" title="测试文章内照片墙"></a>测试文章内照片墙</h2><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/404_bg.jpg" alt="404_bg"></p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/lml_bg.jpg" alt="lml_bg"></p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/lml_bg8.jpg" alt="lml_bg8"></p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/newhome_bg.jpg" alt="newhome_bg"></p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/tag_bg.jpg" alt="tag_bg"></p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/archive_bg.jpg" alt="archive_bg"></p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/archive_bg2.jpg" alt="archive_bg2"></p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/archive_bg3.jpg" alt="archive_bg3"></p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/categories_bg.jpg" alt="categories_bg"></p><h2 id="说点别的"><a href="#说点别的" class="headerlink" title="说点别的"></a>说点别的</h2><p>晚上跟亲爱的在校园里约了会，嘿嘿嘿。此处省略一万字~</p><p>回来开始JavaScript学习</p><p>明天把曾老师的课笔记做了，实操一下，然后把js继续推进一些，把线代开启一下，博客小瑕疵慢慢用零碎时间整</p>]]></content>
      
      
      <categories>
          
          <category> 日常搞机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>diary-210511</title>
      <link href="2021/05/08/diary-210511/"/>
      <url>2021/05/08/diary-210511/</url>
      
        <content type="html"><![CDATA[<h3 id="博客优化"><a href="#博客优化" class="headerlink" title="博客优化"></a>博客优化</h3><ul><li><p>侧边栏加了pixiv的每日热榜前50，参考链接<a href="https://chocolate.blog.csdn.net/article/details/105619812">https://chocolate.blog.csdn.net/article/details/105619812</a>  做的，发现一堆潜在友链</p></li><li><p>豆瓣电影插件教程参考</p><pre><code>https://github.com/mythsman/hexo-douban</code></pre><p>但是生产一个bug就是无法获取movie的内容，待解决。另外top_img被douban生成的movies覆盖。</p></li><li><p>关于评论模块</p><p>1、参考教程: <a href="https://blog.csdn.net/qq_38157825/article/details/112783083">https://blog.csdn.net/qq_38157825/article/details/112783083</a>  。要实名，弃用：LeanCloud:liloker,    mm:fkmwpCKp5jpiphD  ,@163.com<br>2、Disqus:被墙。。。。。。</p><pre><code>使用gittalk:教程https://blog.csdn.net/qq_33384402/article/details/107200465</code></pre><p>3、算了，还是用第一个valine吧，gittalk需要登录才能评论，这得减少不少活跃度，<a href="https://blog.csdn.net/qq_38157825/article/details/112783083">https://blog.csdn.net/qq_38157825/article/details/112783083</a></p><pre><code>邮箱提醒:IMAP/SMTP授权码163邮箱教程:https://github.com/zhaojun1998/Valine-Admin</code></pre><p>4、折腾半天，leancloud好坑，由于域名没有备案，所以无法用leancloud的域名绑定，所以就没法接。。。下次继续爬坑，今天劳资折腾累了，嗐~真累</p></li></ul><h3 id="昨天"><a href="#昨天" class="headerlink" title="昨天"></a>昨天</h3><ul><li>昨天把OSS上关于博客的图片资源重构了一遍，体会到了项目的资源乱放的坏处，得结构清晰，可扩展，上层建筑才好做啊</li></ul><hr><h3 id="5月13日补充"><a href="#5月13日补充" class="headerlink" title="5月13日补充"></a>5月13日补充</h3><p>今天deploy一下，居然，评论系统生效了，赶紧来总结一下这个误打误撞的幸运</p><p>用的valine，登录Leancloud，发现上次只是根据邮件那篇教程，弄失败了，只是建了容器啥的。</p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/image-20210513235835695.png" alt="image-20210513235835695"></p><p>创建应用</p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/image-20210514000452921.png" alt="image-20210514000452921"></p><p>云引擎未部署，当时是为了部署邮件提醒来着</p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/image-20210514000547119.png" alt="image-20210514000547119"></p><p>然后把应用api的id和key接给主题配置文件中的对应位置的appid和appkey，评论系统选用valine</p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/image-20210514001006737.png" alt="image-20210514001006737"></p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/image-20210514001032285.png" alt="image-20210514001032285"></p><p>另外，博客的配置文件中需要添加插件valine，哦不用，valine有主题内置的部分，豆瓣需要在博客的配置文件中添加插件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">douban:</span></span><br><span class="line">  <span class="attr">user:</span> <span class="number">209077762</span> <span class="comment">#我的豆瓣ID</span></span><br><span class="line">  <span class="attr">builtin:</span> <span class="literal">true</span> <span class="comment"># 是否将生成页面的功能嵌入hexo s和hexo g中，默认是false,另一可选项为true(1.x.x版本新增配置项)。</span></span><br><span class="line">  <span class="comment"># book:</span></span><br><span class="line">  <span class="comment">#   title: &#x27;This is my book title&#x27;</span></span><br><span class="line">  <span class="comment">#   quote: &#x27;This is my book quote&#x27;</span></span><br><span class="line">  <span class="attr">movie:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">&#x27;读万卷书，行万里路&#x27;</span></span><br><span class="line">    <span class="attr">quote:</span> <span class="string">&#x27;没有无限的因素在里面,你才是那个无限的因素的主导。——《海上钢琴师》&#x27;</span></span><br><span class="line">  <span class="comment"># game:</span></span><br><span class="line">  <span class="comment">#   title: &#x27;This is my game title&#x27;</span></span><br><span class="line">  <span class="comment">#   quote: &#x27;This is my game quote&#x27;</span></span><br><span class="line">  <span class="attr">timeout:</span> <span class="number">10000</span> <span class="comment">#爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。</span></span><br></pre></td></tr></table></figure><p>别的好像不需要布置啥了，想了一下，前几天没成功可能是因为在localhost测试的原因，emmmm</p>]]></content>
      
      
      <categories>
          
          <category> 日常搞机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>testblog2</title>
      <link href="2021/05/07/testblog2/"/>
      <url>2021/05/07/testblog2/</url>
      
        <content type="html"><![CDATA[<h2 id="1、今日历练"><a href="#1、今日历练" class="headerlink" title="1、今日历练"></a>1、今日历练</h2><p>今天下午终于把typora+OSS+picgo-core给调试好了，以后相册集可以不用编译静态页面中的那么多图片了，欧耶。</p><p>昨天晚上添加了404页面，跳过渲染直接用的模板，关闭自带默认404页面</p><p>太累了，live2D以后再说吧</p><p>官方文档真是好东西，然鹅初次看还是躺枪踩坑，之后把我搭建博客的全过程都放在博客里，这是butterfly主题的官方文档：<a href="https://butterfly.js.org/posts/dc584b87/#Front-matter">https://butterfly.js.org/posts/dc584b87/#Front-matter</a></p><p>post前面的tags多个标签原来要这样写</p><p>[标签,标签]</p><hr><h2 id="2、下一阶段"><a href="#2、下一阶段" class="headerlink" title="2、下一阶段"></a>2、下一阶段</h2><p>接下来搞一下评论系统和百度SEO，还有就是CSDN博客搬家过来，国内站点暂时不需要，不知道为什么github托管，速度居然还挺快的，这是为什么？</p><h2 id="3、说点别的"><a href="#3、说点别的" class="headerlink" title="3、说点别的"></a>3、说点别的</h2><h3 id="3-1、test了"><a href="#3-1、test了" class="headerlink" title="3.1、test了"></a>3.1、test了</h3><p>嗯，test了一下，尽管有很多瑕疵，但总的来说感觉已经很棒了，我只是在尽可能地去一点一点去优化罢了，精益求精，这样是没有尽头的，暂且就先把我看到的瑕疵尽量填满吧。</p><hr><p>原来md文件中的分割线在这里是这个造型，hhh，针不戳~<img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/026CC77E.jpg" alt="img"></p><p>来个表情包，现在typora可以自动upload了，真好，而且hexo编译静态页面的时候可以直接跳过图片集了，这样只要把无限多的图片放到typora中就好了，自动上传到OSS，typora中只需要记url即可，当打开软件时，在联网的情况下，临时渲染即可。</p><hr><h3 id="3-2、确定一些细节"><a href="#3-2、确定一些细节" class="headerlink" title="3.2、确定一些细节"></a>3.2、确定一些细节</h3><p>很累了，然后test的时候aplayer突然random出来的是天依的《漂亮面对》，真好，瞬间心情好了，疲劳一扫而过。</p><p>于是想把漂亮面对作为打开网页的第一首，但是这样的话会导致审美疲劳，（时间久）,于是现在边听歌边码字，打造一个专属歌单，这个歌单关键词：二次元，解压，可爱（毕竟我的blog有作为自己的二次元小窝的打算hhh~，这下就有一个IP容身之地了）</p><p>​    这里加了一个tab来测试首行缩进试试，如此一来，持续性的输出反而是一种享受了。妙哉~ 快哉~</p><p>tab缩进也太不明显了吧，好吧，我关闭typora中的缩进，这下看来，blog中的排版和typora中的好像，简直是一模一样（除了分割线）</p><h3 id="3-3、今天真热"><a href="#3-3、今天真热" class="headerlink" title="3.3、今天真热"></a>3.3、今天真热</h3><p>不用过审核的感觉太爽了，以后这里就当我的思维宫殿好了<br>    这里有一个tab，源码模式下的</p><p>​        这里有2个tab，非代码模式下</p><p>​            这里有3个</p><p>​                4个</p><p>​                    5个</p><p>对了，首页的打字效果得调下位置与区域，头像转速动画可以调下</p>]]></content>
      
      
      <categories>
          
          <category> 小白的进阶之路 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> 随想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Trojan节点实现科学上网</title>
      <link href="2021/05/07/%E5%9F%BA%E4%BA%8ETrojan%E8%8A%82%E7%82%B9%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
      <url>2021/05/07/%E5%9F%BA%E4%BA%8ETrojan%E8%8A%82%E7%82%B9%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<h2 id="关于Trojan的搭建"><a href="#关于Trojan的搭建" class="headerlink" title="关于Trojan的搭建"></a>关于Trojan的搭建</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ul><li><p>租一个vultr的vps，据说ipv6的最低有2.5$，优惠见网站<a href="https://www.vultryhw.cn/">https://www.vultryhw.cn/</a></p><p>据说有个白嫖网站，没弄过，记一下<a href="https://www.freenom.com/zh/index.html?lang=zh">https://www.freenom.com/zh/index.html?lang=zh</a></p></li><li><p>域名A解析到vps的IP</p></li><li><p>vps安装依赖项命令：</p><p>centOS：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">centos：yum update -y &amp;&amp; yum install sudo newt curl -y &amp;&amp; sudo -i</span><br></pre></td></tr></table></figure><p><strong>debian</strong>、ubuntu：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get install sudo whiptail curl locales -y &amp;&amp; sudo -i</span><br></pre></td></tr></table></figure></li><li><p>安装前确保打开80和443端口:</p><p>查看端口开放命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -anp</span><br></pre></td></tr></table></figure><p>打开80端口与查看80端口命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nc -lp 80 &amp;</span><br><span class="line">netstat -an | grep 80</span><br></pre></td></tr></table></figure><p>443端口操作同上</p></li><li><p>debian查看端口的方法：<a href="https://blog.51cto.com/u_14414732/2513736">https://blog.51cto.com/u_14414732/2513736</a></p></li><li><p>debian查看防火墙状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw status</span><br></pre></td></tr></table></figure><p>关闭：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw <span class="built_in">disable</span>|<span class="built_in">enable</span></span><br></pre></td></tr></table></figure><p>参考：<a href="https://www.jb51.net/os/Ubuntu/72109.html">https://www.jb51.net/os/Ubuntu/72109.html</a></p></li></ul><hr><h3 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h3><ul><li><p>debian开放所有端口（这个一键安装教程真坑，md真是一键入坑，关闭防火墙≠开启所有端口）</p><p>主要是用了这句：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --dport 51000：60000 -j ACCEPT</span><br></pre></td></tr></table></figure><p>真坑爹！把1到65535全开了很不正常的吧，trojan原理是伪装，那这样本身会造成系统的不安全，而且端口全开也有一种大张旗鼓的感觉？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">以下适合Linux debian10操作系统的服务器，开启防火墙以及端口持久化的方法</span><br><span class="line"></span><br><span class="line">如果遇到创建服务器的时候报错服务器错误，或者点击日志发现主机拒绝访问这种情况可能是服务器的防火墙没有开启</span><br><span class="line"></span><br><span class="line">排查方法：telnet：prot 看是否可以连通</span><br><span class="line"></span><br><span class="line">如果没法连通需要开放防火墙端口</span><br><span class="line"></span><br><span class="line">首先安装 iptables（通常系统都会自带，如果没有就需要安装），使用以下命令</span><br><span class="line"></span><br><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install iptables</span><br><span class="line"></span><br><span class="line">安装成功后使用以下命令开放一个个端口</span><br><span class="line"></span><br><span class="line">iptables -I INPUT -p tcp --dport 8080 -j ACCEPT</span><br><span class="line"></span><br><span class="line">开启一个范围的端口</span><br><span class="line"></span><br><span class="line">iptables -A INPUT -p tcp --dport 51000：60000 -j ACCEPT</span><br><span class="line"></span><br><span class="line">设置完就已经放行了指定的端口，但重启后会失效，所以需要设置持续生效规则：</span><br><span class="line"></span><br><span class="line">输入以下安装 iptables-persistent</span><br><span class="line"></span><br><span class="line">sudo apt-get install iptables-persistent</span><br><span class="line"></span><br><span class="line">输入以下命令保存规则持续生效</span><br><span class="line"></span><br><span class="line">netfilter-persistent save</span><br><span class="line"></span><br><span class="line">netfilter-persistent reload</span><br><span class="line"></span><br><span class="line">完成之后端口就会持续开放。</span><br></pre></td></tr></table></figure></li><li><p>一键安装脚本：（不要用，用下面的新方法）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/johnrosen1/trojan-gfw-script/master/vps.sh)</span>&quot;</span> </span><br></pre></td></tr></table></figure><p>这个版本开发者更新后删除了v2ray，下面命令安装旧版本，可用于安装多个应用： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/harry3633/trojan-gfw-script/master/trojangui.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>输入解析好的域名</p></li><li><p>设置密码：wdnmd123</p></li><li><p>遇到的坑：centos内置防火墙，需要根据os版本提前关闭防火墙，vultr上默认安装的centos可能有默认的SELinux，除了关闭防火墙，还需要配置SELinux放行端口</p><ul><li><p>firewalld is not running解决方案<a href="https://jingyan.baidu.com/article/5552ef47f509bd518ffbc933.html">https://jingyan.baidu.com/article/5552ef47f509bd518ffbc933.html</a></p></li><li><p>坑中坑，真坑，折腾累了看不到希望。。。</p></li></ul></li></ul><hr><ul><li>折腾了半天，得到的确实这么个结果：</li></ul><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/image-20210512202136445.png" alt="image-20210512202136445"></p><p>换方法，（这里换方法直接搜这里证书申请失败来着，于是发现了新方法）</p><hr><h3 id="小收获"><a href="#小收获" class="headerlink" title="小收获"></a>小收获</h3><p>找方法时发现个好玩的<a href="http://luyiminggonnabeok.cn/2019/12/30/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAtraccar%E6%89%8B%E6%9C%BAGPS%E8%BF%BD%E8%B8%AA%E6%9C%8D%E5%8A%A1%E5%99%A8/">http://luyiminggonnabeok.cn/2019/12/30/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAtraccar%E6%89%8B%E6%9C%BAGPS%E8%BF%BD%E8%B8%AA%E6%9C%8D%E5%8A%A1%E5%99%A8/</a>    改天尝试一下用vps搭建traccar手机GPS追踪服务。</p><p>检查vps端口是否能访问的网址：<a href="https://www.toolsdaquan.com/ipcheck/">https://www.toolsdaquan.com/ipcheck/</a></p><hr><h2 id="新方法"><a href="#新方法" class="headerlink" title="新方法"></a>新方法</h2><h3 id="VPS部署"><a href="#VPS部署" class="headerlink" title="VPS部署"></a>VPS部署</h3><p>先上结果：c23e1df9</p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/image-20210512203634914.png" alt="image-20210512203634914"></p><p>参考教程：<a href="https://www.v2rayssr.com/trojan-2.html">https://www.v2rayssr.com/trojan-2.html</a></p><p>在采用此教程之前经历了一次旧方法的失败，所以可能已经具备了旧方法的一些事前准备：</p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/image-20210512205300533.png" alt="image-20210512205300533"></p><p>除了旧方法的防火墙关闭，打开80和443端口，更新依赖项的命令之外，别的应该没影响了。</p><p>下面说新方法的正式步骤：</p><p>1、检查SELinux是否关闭，本文用的是Debian，不存在SELinux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/sbin/sestatus -v      <span class="comment">##如果返回参数为enabled即为开启，disabled为关闭</span></span><br></pre></td></tr></table></figure><p>2、安装基础依赖环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget    <span class="comment">##ContOS Yum 安装 wget</span></span><br><span class="line">apt-get install wget   <span class="comment">##Debian Ubuntu 安装 wget</span></span><br></pre></td></tr></table></figure><p>3、运行Trojan安装代码</p><p>分3行，一行一行复制，有条不紊，出问题好查错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate <span class="string">&quot;https://raw.githubusercontent.com/V2RaySSR/Trojansh/master/trojan1.sh&quot;</span> &amp;&amp; chmod +x trojan1.sh &amp;&amp; ./trojan1.sh</span><br><span class="line"></span><br><span class="line">这步结束当时使用虚拟机蓝灯火狐打不开域名，使用本机国内火狐可以</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate <span class="string">&quot;https://raw.githubusercontent.com/V2RaySSR/Trojansh/master/trojan2.sh&quot;</span> &amp;&amp; chmod +x trojan2.sh &amp;&amp; ./trojan2.sh</span><br><span class="line"></span><br><span class="line">这步容易报证书之类的错误，但我这没有报错，如果出错，可以到此教程的youtube链接中查看</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate <span class="string">&quot;https://raw.githubusercontent.com/V2RaySSR/Trojansh/master/trojan3.sh&quot;</span> &amp;&amp; chmod +x trojan3.sh &amp;&amp; ./trojan3.sh</span><br><span class="line"></span><br><span class="line">这步结束后使用虚拟机Chrome浏览正常，有小锁头</span><br></pre></td></tr></table></figure><p>结束后即出现开头的图：</p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/image-20210512203634914.png" alt="image-20210512203634914"></p><p>配套视频教程：<a href="https://www.youtube.com/watch?v=RBNKJ7iUtm0">https://www.youtube.com/watch?v=RBNKJ7iUtm0</a></p><p>4、安装BBRPLUS加速（命令已失效）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate <span class="string">&quot;https://github.com/ylx2016/Linux-NetSpeed/releases/download/sh/tcp.sh&quot;</span> &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure><p>坑爹，链接404了！</p><p>后面单独开一个BBR加速部分，先跑起来再加速。</p><hr><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><h4 id="windows：v2rayN"><a href="#windows：v2rayN" class="headerlink" title="windows：v2rayN"></a>windows：v2rayN</h4><p>新方法给的链接都挂掉了，去github上找找</p><p><strong><a href="https://github.com/2dust/v2rayN/releases/tag/4.15">https://github.com/2dust/v2rayN/releases/tag/4.15</a> 宝藏链接，下载里面的core版本就可以在win客户端运行，如果不行，可能是.NET版本有问题</strong></p><p>查了下，自己的win10上好像也没有.NET framework。。。。。。</p><hr><h5 id="虚拟机win7-x64尝试："><a href="#虚拟机win7-x64尝试：" class="headerlink" title="虚拟机win7 x64尝试："></a>虚拟机win7 x64尝试：</h5><p>下载后在虚拟机的win7上报错：程序停止运行</p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/image-20210513144900521.png" alt="image-20210513144900521"></p><p>按要求安装了4030319.1版本，结果又报错：错误代码：clr20r3</p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/image-20210513145855108.png" alt="image-20210513145855108"></p><p>百度说是需要更新.NET framework，靠谱链接：V2ray依赖项.NET framework框架安装： <a href="https://dotnet.microsoft.com/download/dotnet-framework/thank-you/net472-web-installer">https://dotnet.microsoft.com/download/dotnet-framework/thank-you/net472-web-installer</a> 安装失败，说是网络原因，找到下载源官网下载<a href="https://dotnet.microsoft.com/download/dotnet-framework/net472%E3%80%82">https://dotnet.microsoft.com/download/dotnet-framework/net472。</a></p><p>又报错，这次说证书错误<img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/image-20210513144639710.png" alt="image-20210513144639710"></p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/image-20210513172707714.png" alt="image-20210513172707714"></p><p>崩溃。。。。。。</p><hr><p>后来在<a href="https://bbs.csdn.net/topics/391822424%E5%8F%91%E7%8E%B0%E5%8F%AF%E8%83%BD%E5%B0%B1%E6%98%AFnet%E6%A1%86%E6%9E%B6%E7%89%88%E6%9C%AC%E7%9A%84%E9%97%AE%E9%A2%98%EF%BC%8C%E5%A5%87%E4%BA%86%E6%80%AA%E4%BA%86%EF%BC%8C%E6%88%91%E5%B0%B1%E6%98%AF%E6%8C%89%E8%A6%81%E6%B1%82%E5%AE%89%E8%A3%85%E7%9A%84%E9%82%A3%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84%E6%A1%86%E6%9E%B6%EF%BC%8C%E4%B8%8D%E8%B5%B7%E4%BD%9C%E7%94%A8%E4%BA%86%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%9B%9E%E7%AD%94%E6%89%AF%E5%88%B0%E7%B3%BB%E7%BB%9F%EF%BC%8C%E4%BA%8E%E6%98%AF%E6%88%91%E6%8A%8A%E8%BD%AF%E4%BB%B6%E4%BB%8E%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%8B%96%E5%88%B0%E4%B8%BB%E6%9C%BA%E5%8F%91%E7%8E%B0%E5%B0%B1%E8%BF%90%E8%A1%8C%E6%88%90%E5%8A%9F%E4%BA%86%E3%80%82%E3%80%82%E3%80%82%E3%80%82%E3%80%82%E3%80%82%E6%88%91%E6%9C%89%E7%82%B9%E6%80%80%E7%96%91%E6%98%AF%E4%B9%8B%E5%89%8D%E6%8A%93%E5%8C%85%E5%9C%A8%E7%B3%BB%E7%BB%9F%E9%87%8C%E7%95%99%E7%9A%84%E8%AF%81%E4%B9%A6%E5%BD%B1%E5%93%8D%E7%9A%84%E3%80%82%E3%80%82%E3%80%82">https://bbs.csdn.net/topics/391822424发现可能就是net框架版本的问题，奇了怪了，我就是按要求安装的那个版本的框架，不起作用了，这个回答扯到系统，于是我把软件从虚拟机拖到主机发现就运行成功了。。。。。。我有点怀疑是之前抓包在系统里留的证书影响的。。。</a></p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/image-20210513151225071.png" alt="image-20210513151225071"></p><p>之后还是想把VM中的win7搞定，看了几个问题解决方案，感觉就像是NET版本的问题，决定把net升级一下，教程链接<a href="https://blog.csdn.net/richardfjf/article/details/108112229">https://blog.csdn.net/richardfjf/article/details/108112229</a> 这个教程涉及到系统的补丁，说是没有补丁高版本的NET框架就会报签名的错。。。</p><p>成功了！</p><p>安装完上面那个win7补丁后NET4.7.3081.0版本就能顺利安装上了，然后v2rayN也能正常运行了，和主机一样可以使用。</p><p>这里的补丁，NET框架以及win平台的v2rayN最后和下面的加速脚本一起打包</p><hr><h5 id="宿主机win10-x64尝试"><a href="#宿主机win10-x64尝试" class="headerlink" title="宿主机win10 x64尝试:"></a>宿主机win10 x64尝试:</h5><p>在主机上直接运行<a href="https://github.com/2dust/v2rayN/releases/tag/4.15%E4%B8%ADv2rayN-core%E7%89%88%E6%9C%AC%E7%9A%84%EF%BC%8C%E9%85%8D%E7%BD%AE%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%8C%E7%81%AB%E7%8B%90%E9%BB%98%E8%AE%A4%E4%BD%BF%E7%94%A8%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%90%86%EF%BC%8Cv2ray-core%E4%BD%BF%E7%94%A8%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%90%86%E3%80%82">https://github.com/2dust/v2rayN/releases/tag/4.15中v2rayN-core版本的，配置服务器，火狐默认使用系统代理，v2ray-core使用自动配置系统代理。</a></p><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/image-20210513152657060.png" alt="image-20210513152657060"></p><hr><p>关于trojanWin，就像电脑版的Igniter一样的木马图标</p><p>资源链接：<a href="https://github.com/rkzrdm/TrojanWin">https://github.com/rkzrdm/TrojanWin</a> 但是貌似只是把trojan.exe装了个UI界面，没什么用</p><p>tips：蓝灯开启后，火狐使用的是系统代理。这里trojan一直怀疑需要手动配置socks5代理</p><hr><h4 id="Android：lgnite"><a href="#Android：lgnite" class="headerlink" title="Android：lgnite"></a>Android：lgnite</h4><p>安卓端使用lgniter，具体资源已上传:</p><p>trojan的github资源：<a href="https://github.com/trojan-gfw/trojan/wiki/Mobile-Platforms">https://github.com/trojan-gfw/trojan/wiki/Mobile-Platforms</a></p><p>忘记手机是哪个链接下的了，<a href="https://github.com/trojan-gfw/igniter/releases/tag/v0.10.3-beta%EF%BC%8C%E8%BF%99%E4%B8%AA%E9%93%BE%E6%8E%A5%E4%B9%9F%E6%9C%89%E4%B8%8D%E5%B0%91">https://github.com/trojan-gfw/igniter/releases/tag/v0.10.3-beta，这个链接也有不少</a></p><pre><code>Enable IPv6：是否支持 IPv6，国内用户支持 IPv6 的终端较少，启用不启用关系大Verify Certificate：是否验证证书，默认是打开的，对于自签名的服务器，建议关闭此项Bypass China with Clash：是否通过 Clash 优化绕过中国网络的样子，因为没仔细研究其优化策略，也不好说是否有效，建议使用默认开启即可关于igniter:   https://www.rultr.com/tutorials/vps/3825.html</code></pre><p>但是！</p><p>使用lgniter测试成功，ip地址待验证，验证结果很不幸，不知道为什么，手机挂了Igniter之后从ip138查到的ip地址是一样的。。。</p><p>不过话说回来，手机IP也应该是运营商基站根据DHCP这种类似的协议进行动态ip分配的，所以理论上可以通过打开飞行模式再关闭，或者换一个基站，就变ip了？（待测试）</p><hr><h4 id="mac：没搞过"><a href="#mac：没搞过" class="headerlink" title="mac：没搞过"></a>mac：没搞过</h4><p><a href="https://www.datacenterfarm.com/3254.html">https://www.datacenterfarm.com/3254.html</a></p><p>这个链接，看看就行</p><hr><h2 id="BBR加速"><a href="#BBR加速" class="headerlink" title="BBR加速"></a>BBR加速</h2><p>简而言之，BBR是谷歌开发出的用来加速的，之后出现了魔改BBR，BBR Plus等版本，达到压榨VPS带宽潜力的效果。</p><p>1、不同版本BBR加速效果对比视频链接<a href="https://www.youtube.com/watch?v=YOxKxVhiyUY">https://www.youtube.com/watch?v=YOxKxVhiyUY</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">视频中搬瓦工VPS：http:&#x2F;&#x2F;bit.ly&#x2F;3ckoUov</span><br><span class="line">自用搬瓦工机场：http:&#x2F;&#x2F;bit.ly&#x2F;387YRNP</span><br><span class="line"></span><br><span class="line">BBR一键安装脚本：https:&#x2F;&#x2F;www.94ish.me&#x2F;1635.html</span><br><span class="line">支持系统 Centos 6+ &#x2F; Debian 7+ &#x2F; Ubuntu 14+ BBR魔改版不支持Debian 8</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate <span class="string">&quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot;</span></span><br><span class="line">chmod +x tcp.sh</span><br><span class="line">./tcp.sh</span><br><span class="line"></span><br><span class="line">运行脚本代码</span><br></pre></td></tr></table></figure><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/image-20210513202631837.png" alt="image-20210513202631837"></p><p><a href="https://www.94ish.me/1635.html">https://www.94ish.me/1635.html</a>   上面脚本代码出处</p><p>默认开启了BBR，这里尝试使用了BBRplus，貌似没啥效果，youtube看4k还是卡。。。</p><hr><p>2、假设上面的方法成功了，所以这里就不写了</p><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><hr><h2 id="原理剖析"><a href="#原理剖析" class="headerlink" title="原理剖析"></a>原理剖析</h2><p><img src="https://imgbed4iloker.oss-cn-hangzhou.aliyuncs.com/Typora-img/image-20210513150811423.png" alt="image-20210513150811423"></p><hr><h2 id="常见与不常见端口汇总"><a href="#常见与不常见端口汇总" class="headerlink" title="常见与不常见端口汇总"></a>常见与不常见端口汇总</h2><p>作者：旺仔大战肥五花<br>链接：<a href="https://zhuanlan.zhihu.com/p/74782191">https://zhuanlan.zhihu.com/p/74782191</a><br>来源：知乎</p><p>一个计算机最多有65535个端口，端口不能重复。<br><strong>常用端口号：</strong><br>IIS（HTTP）：80<br>SQLServer：1433<br>Oracle：1521<br>MySQL：3306<br>FTP：21<br>SSH：22<br>Tomcat：8080</p><p><strong>常用和不常用端口一览表</strong></p><p>端口：0<br>服务：Reserved<br>说明：通常用于分析操作系统。这一方法能够工作是因为在一些系统中“0”是无效端口，当你试图使用通常的闭合端口连接它时将产生不同的结果。一种典型的扫描，使用IP地址为0.0.0.0，设置ACK位并在以太网层广播。 </p><p>端口：1<br>服务：tcpmux<br>说明：这显示有人在寻找SGI<br>Irix机器。Irix是实现tcpmux的主要提供者，默认情况下tcpmux在这种系统中被打开。Irix机器在发布是含有几个默认的无密码的帐户，如：IP、GUEST<br>UUCP、NUUCP、DEMOS<br>、TUTOR、DIAG、OUTOFBOX等。许多管理员在安装后忘记删除这些帐户。因此HACKER在INTERNET上搜索tcpmux并利用这些帐户。</p><p>端口：7<br>服务：Echo<br>说明：能看到许多人搜索Fraggle放大器时，发送到X.X.X.0和X.X.X.255的信息。 </p><p>端口：19<br>服务：Character<br>Generator<br>说明：这是一种仅仅发送字符的服务。UDP版本将会在收到UDP包后回应含有垃圾字符的包。TCP连接时会发送含有垃圾字符的数据流直到连接关闭。HACKER利用IP欺骗可以发动DoS攻击。伪造两个chargen服务器之间的UDP包。同样Fraggle<br>DoS攻击向目标地址的这个端口广播一个带有伪造受害者IP的数据包，受害者为了回应这些数据而过载。</p><p>端口：21<br>服务：FTP<br>说明：FTP服务器所开放的端口，用于上传、下载。最常见的攻击者用于寻找打开anonymous的FTP服务器的方法。这些服务器带有可读写的目录。木马Doly<br>Trojan、Fore、Invisible FTP、WebEx、WinCrash和Blade<br>Runner所开放的端口。</p><p>端口：22<br>服务：Ssh<br>说明：PcAnywhere建立的TCP和这一端口的连接可能是为了寻找ssh。这一服务有许多弱点，如果配置成特定的模式，许多使用RSAREF库的版本就会有不少的漏洞存在。</p><p>端口：23<br>服务：Telnet<br>说明：远程登录，入侵者在搜索远程登录UNIX的服务。大多数情况下扫描这一端口是为了找到机器运行的操作系统。还有使用其他技术，入侵者也会找到密码。木马Tiny<br>Telnet<br>Server就开放这个端口。</p><p>端口：25<br>服务：SMTP<br>说明：SMTP服务器所开放的端口，用于发送邮件。入侵者寻找SMTP服务器是为了传递他们的SPAM。入侵者的帐户被关闭，他们需要连接到高带宽的E-MAIL服务器上，将简单的信息传递到不同的地址。木马Antigen、Email<br>Password Sender、Haebu Coceda、Shtrilitz<br>Stealth、WinPC、WinSpy都开放这个端口。</p><p>端口：31<br>服务：MSG<br>Authentication<br>说明：木马Master Paradise、Hackers<br>Paradise开放此端口。</p><p>端口：42<br>服务：WINS<br>Replication<br>说明：WINS复制</p><p>端口：53<br>服务：Domain Name<br>Server（DNS）<br>说明：DNS服务器所开放的端口，入侵者可能是试图进行区域传递（TCP），欺骗DNS（UDP）或隐藏其他的通信。因此防火墙常常过滤或记录此端口。</p><p>端口：67<br>服务：Bootstrap<br>Protocol Server<br>说明：通过DSL和Cable<br>modem的防火墙常会看见大量发送到广播地址255.255.255.255的数据。这些机器在向DHCP服务器请求一个地址。HACKER常进入它们，分配一个地址把自己作为局部路由器而发起大量中间人（man-in-middle）攻击。客户端向68端口广播请求配置，服务器向67端口广播回应请求。这种回应使用广播是因为客户端还不知道可以发送的IP地址。</p><p>DHCP (UDP ports 67 and 68)</p><p>端口：69<br>服务：Trival<br>File<br>Transfer<br>说明：许多服务器与bootp一起提供这项服务，便于从系统下载启动代码。但是它们常常由于错误配置而使入侵者能从系统中窃取任何文件。它们也可用于系统写入文件。 </p><p>端口：79<br>服务：Finger<br>Server<br>说明：入侵者用于获得用户信息，查询操作系统，探测已知的缓冲区溢出错误，回应从自己机器到其他机器Finger扫描。</p><p>端口：80<br>服务：HTTP<br>说明：用于网页浏览。木马Executor开放此端口。</p><p>端口：99<br>服务：Metagram<br>Relay<br>说明：后门程序ncx99开放此端口。</p><p>端口：102<br>服务：Message transfer<br>agent(MTA)-X.400 over TCP/IP<br>说明：消息传输代理。</p><p>端口：109<br>服务：Post Office<br>Protocol<br>-Version3<br>说明：POP3服务器开放此端口，用于接收邮件，客户端访问服务器端的邮件服务。POP3服务有许多公认的弱点。关于用户名和密码交换缓冲区溢出的弱点至少有20个，这意味着入侵者可以在真正登陆前进入系统。成功登陆后还有其他缓冲区溢出错误。</p><p>端口：110<br>服务：SUN公司的RPC服务所有端口<br>说明：常见RPC服务有rpc.mountd、NFS、rpc.statd、rpc.csmd、rpc.ttybd、amd等</p><p>端口：113<br>服务：Authentication<br>Service<br>说明：这是一个许多计算机上运行的协议，用于鉴别TCP连接的用户。使用标准的这种服务可以获得许多计算机的信息。但是它可作为许多服务的记录器，尤其是FTP、POP、IMAP、SMTP和IRC等服务。通常如果有许多客户通过防火墙访问这些服务，将会看到许多这个端口的连接请求。记住，如果阻断这个端口客户端会感觉到在防火墙另一边与E-MAIL服务器的缓慢连接。许多防火墙支持TCP连接的阻断过程中发回RST。这将会停止缓慢的连接。</p><p>端口：119<br>服务：Network<br>News Transfer<br>Protocol<br>说明：NEWS新闻组传输协议，承载USENET通信。这个端口的连接通常是人们在寻找USENET服务器。多数ISP限制，只有他们的客户才能访问他们的新闻组服务器。打开新闻组服务器将允许发/读任何人的帖子，访问被限制的新闻组服务器，匿名发帖或发送SPAM。</p><p>端口：135<br>服务：Location<br>Service<br>说明：Microsoft在这个端口运行DCE RPC end-point mapper为它的DCOM服务。这与UNIX<br>111端口的功能很相似。使用DCOM和RPC的服务利用计算机上的end-point<br>mapper注册它们的位置。远端客户连接到计算机时，它们查找end-point<br>mapper找到服务的位置。HACKER扫描计算机的这个端口是为了找到这个计算机上运行Exchange<br>Server吗？什么版本？还有些DOS攻击直接针对这个端口。</p><p>端口：137、138、139<br>服务：NETBIOS Name<br>Service<br>说明：其中137、138是UDP端口，当通过网上邻居传输文件时用这个端口。而139端口通过这个端口进入的连接试图获得NetBIOS/SMB服务。这个协议被用于windows文件和打印机共享和SAMBA。还有WINS<br>Regisrtation也用它。 </p><p>端口：143<br>服务：Interim Mail Access Protocol<br>v2<br>说明：和POP3的安全问题一样，许多IMAP服务器存在有缓冲区溢出漏洞。记住：一种Linux蠕虫（admv0rm）会通过这个端口繁殖，因此许多这个端口的扫描来自不知情的已经被感染的用户。当REDHAT在他们的LINUX发布版本中默认允许IMAP后，这些漏洞变的很流行。这一端口还被用于IMAP2，但并不流行。</p><p>端口：161<br>服务：SNMP<br>说明：SNMP允许远程管理设备。所有配置和运行信息的储存在数据库中，通过SNMP可获得这些信息。许多管理员的错误配置将被暴露在Internet。Cackers将试图使用默认的密码public、private访问系统。他们可能会试验所有可能的组合。SNMP包可能会被错误的指向用户的网络。</p><p>端口：177<br>服务：X<br>Display Manager Control<br>Protocol<br>说明：许多入侵者通过它访问X-windows操作台，它同时需要打开6000端口。</p><p>端口：389<br>服务：LDAP、ILS<br>说明：轻型目录访问协议和NetMeeting<br>Internet Locator<br>Server共用这一端口。</p><p>端口：443<br>服务：Https<br>说明：网页浏览端口，能提供加密和通过安全端口传输的另一种HTTP。</p><p>端口：456<br>服务：[NULL]<br>说明：木马HACKERS<br>PARADISE开放此端口。</p><p>端口：513<br>服务：Login,remote login<br>说明：是从使用cable<br>modem或DSL登陆到子网中的UNIX计算机发出的广播。这些人为入侵者进入他们的系统提供了信息。</p><p>端口：544<br>服务：[NULL]<br>说明：kerberos kshell</p><p>端口：548<br>服务：Macintosh,File<br>Services(AFP/IP)<br>说明：Macintosh,文件服务。</p><p>端口：553<br>服务：CORBA IIOP<br>（UDP）<br>说明：使用cable<br>modem、DSL或VLAN将会看到这个端口的广播。CORBA是一种面向对象的RPC系统。入侵者可以利用这些信息进入系统。</p><p>端口：555<br>服务：DSF<br>说明：木马PhAse1.0、Stealth<br>Spy、IniKiller开放此端口。</p><p>端口：568<br>服务：Membership DPA<br>说明：成员资格<br>DPA。</p><p>端口：569<br>服务：Membership MSN<br>说明：成员资格<br>MSN。</p><p>端口：635<br>服务：mountd<br>说明：Linux的mountd<br>Bug。这是扫描的一个流行BUG。大多数对这个端口的扫描是基于UDP的，但是基于TCP的mountd有所增加（mountd同时运行于两个端口）。记住mountd可运行于任何端口（到底是哪个端口，需要在端口111做portmap查询），只是Linux默认端口是635，就像NFS通常运行于2049端口。</p><p>端口：636<br>服务：LDAP<br>说明：SSL（Secure<br>Sockets layer）</p><p>端口：666<br>服务：Doom Id Software<br>说明：木马Attack FTP、Satanz<br>Backdoor开放此端口</p><p>端口：993<br>服务：IMAP<br>说明：SSL（Secure Sockets<br>layer）</p><p>端口：1001、1011<br>服务：[NULL]<br>说明：木马Silencer、WebEx开放1001端口。木马Doly<br>Trojan开放1011端口。</p><p>端口：1024<br>服务：Reserved<br>说明：它是动态端口的开始，许多程序并不在乎用哪个端口连接网络，它们请求系统为它们分配下一个闲置端口。基于这一点分配从端口1024开始。这就是说第一个向系统发出请求的会分配到1024端口。你可以重启机器，打开Telnet，再打开一个窗口运行natstat<br>-a 将会看到Telnet被分配1024端口。还有SQL<br>session也用此端口和5000端口。</p><p>端口：1025、1033<br>服务：1025：network blackjack<br>1033：[NULL]<br>说明：木马netspy开放这2个端口。</p><p>端口：1080<br>服务：SOCKS<br>说明：这一协议以通道方式穿过防火墙，允许防火墙后面的人通过一个IP地址访问INTERNET。理论上它应该只允许内部的通信向外到达INTERNET。但是由于错误的配置，它会允许位于防火墙外部的攻击穿过防火墙。WinGate常会发生这种错误，在加入IRC聊天室时常会看到这种情况。</p><p>端口：1170<br>服务：[NULL]<br>说明：木马Streaming<br>Audio Trojan、Psyber Stream<br>Server、Voice开放此端口。</p><p>端口：1234、1243、6711、6776<br>服务：[NULL]<br>说明：木马SubSeven2.0、Ultors<br>Trojan开放1234、6776端口。木马SubSeven1.0/1.9开放1243、6711、6776端口。</p><p>端口：1245<br>服务：[NULL]<br>说明：木马Vodoo开放此端口。</p><p>端口：1433<br>服务：SQL<br>说明：Microsoft的SQL服务开放的端口。</p><p>端口：1492<br>服务：stone-design-1<br>说明：木马FTP99CMP开放此端口。</p><p>端口：1500<br>服务：RPC<br>client fixed port session<br>queries<br>说明：RPC客户固定端口会话查询</p><p>端口：1503<br>服务：NetMeeting<br>T.120<br>说明：NetMeeting<br>T.120</p><p>端口：1524<br>服务：ingress<br>说明：许多攻击脚本将安装一个后门SHELL于这个端口，尤其是针对SUN系统中Sendmail和RPC服务漏洞的脚本。如果刚安装了防火墙就看到在这个端口上的连接企图，很可能是上述原因。可以试试Telnet到用户的计算机上的这个端口，看看它是否会给你一个SHELL。连接到600/pcserver也存在这个问题。</p><p>端口：1600<br>服务：issd<br>说明：木马Shivka-Burka开放此端口。</p><p>端口：1720<br>服务：NetMeeting<br>说明：NetMeeting<br>H.233 call Setup。</p><p>端口：1731<br>服务：NetMeeting Audio Call<br>Control<br>说明：NetMeeting音频调用控制。</p><p>端口：1807<br>服务：[NULL]<br>说明：木马SpySender开放此端口。</p><p>端口：1981<br>服务：[NULL]<br>说明：木马ShockRave开放此端口。</p><p>端口：1999<br>服务：cisco<br>identification<br>port<br>说明：木马BackDoor开放此端口。</p><p>端口：2000<br>服务：[NULL]<br>说明：木马GirlFriend<br>1.3、Millenium 1.0开放此端口。</p><p>端口：2001<br>服务：[NULL]<br>说明：木马Millenium 1.0、Trojan<br>Cow开放此端口。</p><p>端口：2023<br>服务：xinuexpansion 4<br>说明：木马Pass<br>Ripper开放此端口。</p><p>端口：2049<br>服务：NFS<br>说明：NFS程序常运行于这个端口。通常需要访问Portmapper查询这个服务运行于哪个端口。</p><p>端口：2115<br>服务：[NULL]<br>说明：木马Bugs开放此端口。</p><p>端口：2140、3150<br>服务：[NULL]<br>说明：木马Deep<br>Throat 1.0/3.0开放此端口。</p><p>端口：2500<br>服务：RPC client using a fixed port session<br>replication<br>说明：应用固定端口会话复制的RPC客户</p><p>端口：2583<br>服务：[NULL]<br>说明：木马Wincrash<br>2.0开放此端口。</p><p>端口：2801<br>服务：[NULL]<br>说明：木马Phineas<br>Phucker开放此端口。</p><p>端口：3024、4092<br>服务：[NULL]<br>说明：木马WinCrash开放此端口。</p><p>端口：3128<br>服务：squid<br>说明：这是squid<br>HTTP代理服务器的默认端口。攻击者扫描这个端口是为了搜寻一个代理服务器而匿名访问Internet。也会看到搜索其他代理服务器的端口8000、8001、8080、8888。扫描这个端口的另一个原因是用户正在进入聊天室。其他用户也会检验这个端口以确定用户的机器是否支持代理。</p><p>端口：3129<br>服务：[NULL]<br>说明：木马Master<br>Paradise开放此端口。</p><p>端口：3150<br>服务：[NULL]<br>说明：木马The<br>Invasor开放此端口。</p><p>端口：3210、4321<br>服务：[NULL]<br>说明：木马SchoolBus开放此端口</p><p>端口：3333<br>服务：dec-notes<br>说明：木马Prosiak开放此端口</p><p>端口：3389<br>服务：超级终端<br>说明：WINDOWS<br>2000终端开放此端口。</p><p>端口：3700<br>服务：[NULL]<br>说明：木马Portal of<br>Doom开放此端口</p><p>端口：3996、4060<br>服务：[NULL]<br>说明：木马RemoteAnything开放此端口</p><p>端口：4000<br>服务：QQ客户端<br>说明：腾讯QQ客户端开放此端口。</p><p>端口：4092<br>服务：[NULL]<br>说明：木马WinCrash开放此端口。</p><p>端口：4590<br>服务：[NULL]<br>说明：木马ICQTrojan开放此端口。</p><p>端口：5000、5001、5321、50505<br>服务：[NULL]<br>说明：木马blazer5开放5000端口。木马Sockets<br>de<br>Troie开放5000、5001、5321、50505端口。</p><p>端口：5400、5401、5402<br>服务：[NULL]<br>说明：木马Blade<br>Runner开放此端口。</p><p>端口：5550<br>服务：[NULL]<br>说明：木马xtcp开放此端口。</p><p>端口：5569<br>服务：[NULL]<br>说明：木马Robo-Hack开放此端口。</p><p>端口：5632<br>服务：pcAnywere<br>说明：有时会看到很多这个端口的扫描，这依赖于用户所在的位置。当用户打开pcAnywere时，它会自动扫描局域网C类网以寻找可能的代理（这里的代理是指agent而不是proxy）。入侵者也会寻找开放这种服务的计算机。，所以应该查看这种扫描的源地址。一些搜寻pcAnywere的扫描包常含端口22的UDP数据包。</p><p>端口：5742<br>服务：[NULL]<br>说明：木马WinCrash1.03开放此端口。</p><p>端口：6267<br>服务：[NULL]<br>说明：木马广外女生开放此端口。</p><p>端口：6400<br>服务：[NULL]<br>说明：木马The<br>tHing开放此端口。</p><p>端口：6670、6671<br>服务：[NULL]<br>说明：木马Deep Throat开放6670端口。而Deep<br>Throat<br>3.0开放6671端口。</p><p>端口：6883<br>服务：[NULL]<br>说明：木马DeltaSource开放此端口。</p><p>端口：6969<br>服务：[NULL]<br>说明：木马Gatecrasher、Priority开放此端口。</p><p>端口：6970<br>服务：RealAudio<br>说明：RealAudio客户将从服务器的6970-7170的UDP端口接收音频数据流。这是由TCP-7070端口外向控制连接设置的。</p><p>端口：7000<br>服务：[NULL]<br>说明：木马Remote<br>Grab开放此端口。</p><p>端口：7300、7301、7306、7307、7308<br>服务：[NULL]<br>说明：木马NetMonitor开放此端口。另外NetSpy1.0也开放7306端口。</p><p>端口：7323<br>服务：[NULL]<br>说明：Sygate服务器端。</p><p>端口：7626<br>服务：[NULL]<br>说明：木马Giscier开放此端口。</p><p>端口：7789<br>服务：[NULL]<br>说明：木马ICKiller开放此端口。</p><p>端口：8000<br>服务：OICQ<br>说明：腾讯QQ服务器端开放此端口。</p><p>端口：8010<br>服务：Wingate<br>说明：Wingate代理开放此端口。</p><p>端口：8080<br>服务：代理端口<br>说明：WWW代理开放此端口。</p><p>端口：9400、9401、9402<br>服务：[NULL]<br>说明：木马Incommand<br>1.0开放此端口。</p><p>端口：9872、9873、9874、9875、10067、10167<br>服务：[NULL]<br>说明：木马Portal<br>of<br>Doom开放此端口。</p><p>端口：9989<br>服务：[NULL]<br>说明：木马iNi-Killer开放此端口。</p><p>端口：11000<br>服务：[NULL]<br>说明：木马SennaSpy开放此端口。</p><p>端口：11223<br>服务：[NULL]<br>说明：木马Progenic<br>trojan开放此端口。</p><p>端口：12076、61466<br>服务：[NULL]<br>说明：木马Telecommando开放此端口。</p><p>端口：12223<br>服务：[NULL]<br>说明：木马Hack’99<br>KeyLogger开放此端口。</p><p>端口：12345、12346<br>服务：[NULL]<br>说明：木马NetBus1.60/1.70、GabanBus开放此端口。</p><p>端口：12361<br>服务：[NULL]<br>说明：木马Whack-a-mole开放此端口。</p><p>端口：13223<br>服务：PowWow<br>说明：PowWow是Tribal<br>Voice的聊天程序。它允许用户在此端口打开私人聊天的连接。这一程序对于建立连接非常具有攻击性。它会驻扎在这个TCP端口等回应。造成类似心跳间隔的连接请求。如果一个拨号用户从另一个聊天者手中继承了IP地址就会发生好象有很多不同的人在测试这个端口的情况。这一协议使用OPNG作为其连接请求的前4个字节。</p><p>端口：16969<br>服务：[NULL]<br>说明：木马Priority开放此端口。</p><p>端口：17027<br>服务：Conducent<br>说明：这是一个外向连接。这是由于公司内部有人安装了带有Conducent”adbot”的共享软件。Conducent”adbot”是为共享软件显示广告服务的。使用这种服务的一种流行的软件是Pkware。</p><p>端口：19191<br>服务：[NULL]<br>说明：木马蓝色火焰开放此端口。</p><p>端口：20000、20001 </p><p>服务：[NULL]<br>说明：木马Millennium开放此端口。</p><p>端口：20034<br>服务：[NULL]<br>说明：木马NetBus<br>Pro开放此端口。</p><p>端口：21554<br>服务：[NULL]<br>说明：木马GirlFriend开放此端口。</p><p>端口：22222<br>服务：[NULL]<br>说明：木马Prosiak开放此端口。</p><p>端口：23456<br>服务：[NULL]<br>说明：木马Evil<br>FTP、Ugly<br>FTP开放此端口。</p><p>端口：26274、47262<br>服务：[NULL]<br>说明：木马Delta开放此端口。</p><p>端口：27374<br>服务：[NULL]<br>说明：木马Subseven<br>2.1开放此端口。</p><p>端口：30100<br>服务：[NULL]<br>说明：木马NetSphere开放此端口。</p><p>端口：30303<br>服务：[NULL]<br>说明：木马Socket23开放此端口。</p><p>端口：30999<br>服务：[NULL]<br>说明：木马Kuang开放此端口。</p><p>端口：31337、31338<br>服务：[NULL]<br>说明：木马BO(Back<br>Orifice)开放此端口。另外木马DeepBO也开放31338端口。</p><p>端口：31339 </p><p>服务：[NULL]<br>说明：木马NetSpy<br>DK开放此端口。</p><p>端口：31666<br>服务：[NULL]<br>说明：木马BOWhack开放此端口。</p><p>端口：33333<br>服务：[NULL]<br>说明：木马Prosiak开放此端口。</p><p>端口：34324<br>服务：[NULL]<br>说明：木马Tiny<br>Telnet Server、BigGluck、TN开放此端口。</p><p>端口：40412<br>服务：[NULL]<br>说明：木马The<br>Spy开放此端口。</p><p>端口：40421、40422、40423、40426、<br>服务：[NULL]<br>说明：木马Masters<br>Paradise开放此端口。</p><p>端口：43210、54321<br>服务：[NULL]<br>说明：木马SchoolBus<br>1.0/2.0开放此端口。</p><p>端口：44445<br>服务：[NULL]<br>说明：木马Happypig开放此端口。</p><p>端口：50766 </p><p>服务：[NULL]<br>说明：木马Fore开放此端口。</p><p>端口：53001<br>服务：[NULL]<br>说明：木马Remote<br>Windows Shutdown开放此端口。</p><p>端口：65000<br>服务：[NULL]<br>说明：木马Devil<br>1.03开放此端口。</p><p>端口：88<br>说明：Kerberos<br>krb5。另外TCP的88端口也是这个用途。</p><p>端口：137<br>说明：SQL Named Pipes encryption over other<br>protocols name lookup(其他协议名称查找上的SQL命名管道加密技术)和SQL RPC encryption over other<br>protocols name lookup(其他协议名称查找上的SQL RPC加密技术)和Wins NetBT name service(WINS<br>NetBT名称服务)和Wins Proxy都用这个端口。</p><p>端口：161<br>说明：Simple Network Management<br>Protocol(SMTP)（简单网络管理协议）。</p><p>端口：162<br>说明：SNMP<br>Trap（SNMP陷阱）</p><p>端口：445<br>说明：Common Internet File<br>System(CIFS)（公共Internet文件系统）</p><p>端口：464<br>说明：Kerberos<br>kpasswd(v5)。另外TCP的464端口也是这个用途。</p><p>端口：500<br>说明：Internet Key<br>Exchange(IKE)（Internet密钥交换）</p><p>端口：1645、1812<br>说明：Remot Authentication<br>Dial-In User Service(RADIUS)authentication(Routing and Remote<br>Access)(远程认证拨号用户服务)</p><p>端口：1646、1813<br>说明：RADIUS accounting(Routing and<br>Remote Access)(RADIUS记帐（路由和远程访问）)</p><p>端口：1701<br>说明：Layer Two Tunneling<br>Protocol(L2TP)(第2层隧道协议)</p><p>端口：1801、3527<br>说明：Microsoft Message Queue<br>Server(Microsoft消息队列服务器)。还有TCP的135、1801、2101、2103、2105也是同样的用途。</p><p>端口：2504<br>说明：Network<br>Load Balancing(网络平衡负荷)</p><p>网络层—数据包的包格式里面有个很重要的字段叫做协议号。比如在传输层如果是TCP连接，那么在网络层IP包里面的协议号就将会有个值是6，如果是UDP的话那个值就是17—传输层。</p><p>传输层—通过接口关联(端口的字段叫做端口)—应用层。<br>用netstat –an 可以查看本机开放的端口号。 </p><p><strong>代理服务器常用端口</strong></p><p>（1）. HTTP协议代理服务器常用端口号：80/8080/3128/8081/9080<br>（2）. SOCKS代理协议服务器常用端口号：1080<br>（3）. FTP（文件传输）协议代理服务器常用端口号：21<br>（4）. Telnet（远程登录）协议代理服务器常用端口：23</p><p>HTTP服务器，默认的端口号为80/tcp（木马Executor开放此端口）；<br>HTTPS（securely transferring web pages）服务器，默认的端口号为443/tcp 443/udp；<br>Telnet（不安全的文本传送），默认端口号为23/tcp（木马Tiny Telnet Server所开放的端口）；<br>FTP，默认的端口号为21/tcp（木马Doly Trojan、Fore、Invisible FTP、WebEx、WinCrash和Blade Runner所开放的端口）；<br>TFTP（Trivial File Transfer Protocol ），默认的端口号为69/udp；<br>SSH（安全登录）、SCP（文件传输）、端口重定向，默认的端口号为22/tcp；<br>SMTP Simple Mail Transfer Protocol (E-mail)，默认的端口号为25/tcp（木马Antigen、Email Password Sender、Haebu Coceda、Shtrilitz Stealth、WinPC、WinSpy都开放这个端口）；<br>POP3 Post Office Protocol (E-mail) ，默认的端口号为110/tcp；<br>WebLogic，默认的端口号为7001；<br>Webshpere应用程序，默认的端口号为9080；<br>webshpere管理工具，默认的端口号为9090；<br>JBOSS，默认的端口号为8080；<br>TOMCAT，默认的端口号为8080；<br>WIN2003远程登陆，默认的端口号为3389；<br>Symantec AV/Filter for MSE ,默认端口号为 8081；<br>Oracle 数据库，默认的端口号为1521；<br>ORACLE EMCTL，默认的端口号为1158；<br>Oracle XDB（ XML 数据库），默认的端口号为8080；<br>Oracle XDB FTP服务，默认的端口号为2100；<br>MS SQL<em>SERVER数据库server，默认的端口号为1433/tcp 1433/udp；<br>MS SQL</em>SERVER数据库monitor，默认的端口号为1434/tcp 1434/udp；<br>QQ，默认的端口号为1080/udp</p><p>TcpMux0 1 Tcp端口服务多路复用器<br>Echo 1 7 回送(echo回送所有的接收数据)</p><p>Discard2 9 删除(静态删除所有接受的数据)<br>Systat3 11 当前用户<br>Daytime 13 白天<br>Quotd 17 每天的引用<br>Chargen 19 产生字符<br>Ftp-data 20<br>文件传送(默认数据)<br>Ftp 21 文件传送(控制端口)<br>Telnet 23 远程通信网</p><p>Smtp 25 简单邮件传输协议<br>Time 37 时间<br>Nicname 43 谁</p><p>Domain 53 域名服务器<br>Bootps 67 引导程序协议服务器<br>Bootpc 68<br>引导程序协议客户<br>Tftp 69 普通文件传输协议<br>Gopher 70 Gopher</p><p>Finger 79 拨号<br>WWW-http 80 WWW-Http<br>Kerberos 88<br>Kerberos<br>Pop2 109 邮政协议版本2<br>Pop3 110 邮政协议版本3</p><p>Sunrpc 111 Sun运端程序呼叫<br>nntp 119 网络新闻传输协议<br>Ntp 123 网络时间协议</p><p>Netbios-ns 137 网络基本输入输出系统命名服务<br>Netbios-ns 138<br>网络基本输入输出系统数据报服务<br>Netbios-ssn 139 网络基本输入输出系统期间服务<br>Imap2 143<br>中间邮件访问协议V2<br>Snmp 161 简单网络管理协议<br>Bgp 179 边界网关协议</p><p>Syslog 514 系统登陆器</p>]]></content>
      
      
      <categories>
          
          <category> 进阶之路 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记，科学上网 </tag>
            
            <tag> Trojan </tag>
            
            <tag> 端口汇总 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>firstblogtest</title>
      <link href="2021/04/28/firstblogtest/"/>
      <url>2021/04/28/firstblogtest/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
